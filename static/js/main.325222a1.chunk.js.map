{"version":3,"sources":["DataService/local-data/trends.ts","utils/index.ts","AgGrid/templates.tsx","AgGrid/index.tsx","DataService/local-data/financial-data.ts","DataService/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["negative","rowData","positive","changePositive","strongPositive","strongNegative","trends","dataItem","changeNegative","classNames","args","filter","arg","map","Array","isArray","Object","keys","key","idx","el","join","formatNumber","number","Math","floor","toString","replace","currencyFormatter","params","value","ControlButtons","BUTTON_META","live","title","icon","optimizedLive","liveAll","stop","COLDEFS","headerCheckboxSelection","checkboxSelection","width","field","valueFormatter","cellRenderer","cellClass","headerClass","resizable","FRAMEWRKCOMPONENTS","priceCell","props","data","currentTrends","className","colDef","changeCell","changePercentCell","chartCell","AgGrid","agGridApiRef","React","useRef","volumeRef","frequencyRef","useState","selectedButton","setSelectedButton","liveUpdating","setLiveUpdating","debouncedDataReset","useMemo","func","wait","timeoutID","clearTimeout","context","this","window","setTimeout","apply","debounce","currentVolume","onDataReset","useEffect","current","onVolumeChange","useCallback","event","parseInt","target","onFrequencyChange","onSelectClick","currentButton","Number","currentTarget","name","onStartLiveUpdate","onStartOptimizedLiveUpdate","onDataUpdate","onStartLiveUpdateAll","onStopLiveUpdate","onExcelExport","exportDataAsExcel","onGridReady","api","newData","batchUpdateRowData","update","style","maxWidth","minWidth","type","min","max","defaultValue","onChange","id","opacity","step","disabled","border","onClick","height","enableSorting","rowHeight","enableColResize","frameworkComponents","columnDefs","getRowNodeId","ID","displayName","REGIONS","Contract","Settlement","MOCKFINANCEDATA","DATA","FinancialData","count","console","time","currData","i","rand","random","length","dataObj","assign","generateRandomNumber","region","Region","Country","randomizeCountry","mockData","prop","hasOwnProperty","randomizeObjectData","push","timeEnd","dataRow","slice","round","y","recordsUpdated","res","generateNewPrice","Price","Change","ChangePercent","oldPrice","newPrice","changePercent","parseFloat","toFixed","result","country","Countries","rnd","DataProvider","setData","intervalRef","volume","clearInterval","financialData","generateData","interval","setInterval","oldData","item","updateRandomPrices","callback","newItem","optimizedUpdateRandomPrices","updateAllPrices","Children","children","child","isValidElement","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.325222a1.chunk.js","sourcesContent":["export const negative = (rowData: any): boolean => {\n    return rowData['Change(%)'] < 0;\n};\n\nexport const positive = (rowData: any): boolean => {\n    return rowData['Change(%)'] > 0;\n};\n\nexport const changeNegative = (rowData: any): boolean => {\n    return rowData['Change(%)'] < 0 && rowData['Change(%)'] > -1;\n};\n\nexport const changePositive = (rowData: any): boolean => {\n    return rowData['Change(%)'] > 0 && rowData['Change(%)'] < 1;\n};\n\nexport const strongPositive = (rowData: any): boolean => {\n    return rowData['Change(%)'] >= 1;\n};\n\nexport const strongNegative = (rowData: any): boolean => {\n    return rowData['Change(%)'] <= -1;\n};\n","import { changeNegative, changePositive, negative, positive, strongNegative, strongPositive } from '../DataService/local-data/trends';\n\nexport function debounce<F extends Function>(func: F, wait: number): F {\n    let timeoutID: number;\n\n    // conversion through any necessary as it wont satisfy criteria otherwise\n    return <any>function (this: any, ...args: any[]) {\n        clearTimeout(timeoutID);\n        const context = this;\n\n        timeoutID = window.setTimeout(function () {\n            func.apply(context, args);\n        }, wait);\n    };\n};\n\nexport const trends = (dataItem: any) => {\n    return {\n        changeNegative: changeNegative(dataItem),\n        changePositive: changePositive(dataItem),\n        negative: negative(dataItem),\n        positive: positive(dataItem),\n        strongNegative: strongNegative(dataItem),\n        strongPositive: strongPositive(dataItem)\n    };\n};","import React from 'react';\nimport { trends } from '../utils';\n\nexport const classNames = (...args): string => {\n    return args\n        .filter(arg => arg !== true && !!arg)\n        .map((arg: any) => {\n            return Array.isArray(arg)\n                ? classNames(...arg)\n                : typeof arg === 'object'\n                    ? Object\n                        .keys(arg)\n                        .map((key, idx) => arg[idx] || (arg[key] && key) || null)\n                        .filter(el => el !== null)\n                        .join(' ')\n                    : arg;\n        })\n        .filter(arg => !!arg)\n        .join(' ');\n};\n\nexport function formatNumber(number) {\n    // this puts commas into the number eg 1000 goes to 1,000,\n    // i pulled this from stack overflow, i have no idea how it works\n    return Math.floor(number).toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\n}\n\nexport function currencyFormatter(params) {\n    return '$' + formatNumber(params.value);\n}\n\nexport function currencyFormaterTemplate(params) {\n    return '$' + formatNumber(params);\n}\n\nexport const PriceCell = (props) => {\n    const dataItem = props.data;\n    const currentTrends = trends(dataItem);\n\n    return (\n        <div className={props.colDef.cellClass}>\n            <div className={`fintech-icons ${classNames(currentTrends)}`}>\n                <span>{currencyFormaterTemplate(dataItem[props.colDef.field])}</span>\n                {\n                    currentTrends.positive && (<span className=\"k-icon k-i-arrow-60-up\" />)\n                }\n                {\n                    currentTrends.negative && (<span className=\"k-icon k-i-arrow-60-down\" />)\n                }\n            </div>\n        </div>\n    );\n}\n\nexport const ChangeCell = (props) => {\n    const dataItem = props.data;\n    const currentTrends = trends(dataItem);\n\n    return (\n        <div className={props.colDef.cellClass}>\n            <div className={classNames(currentTrends)}>{formatNumber(dataItem[props.colDef.field])}</div>\n        </div>\n    );\n};\n\nexport const ChangePercentCell = (props) => {\n    const dataItem = props.data;\n    const currentTrends = trends(dataItem);\n\n    return (\n        <div className={props.colDef.cellClass}>\n            <div className={classNames(currentTrends)}>{formatNumber(dataItem[props.colDef.field])}%</div>\n        </div>\n    );\n};\n\nexport const ChartCell = (props) => {\n    return (\n        <div className={props.colDef.cellClass}>\n            <button>FSCR</button>\n        </div>\n    );\n};","import React from 'react';\n\nimport { DataProviderRenderProps } from '../DataService';\nimport { debounce, trends } from '../utils';\n\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\nimport \"ag-grid-enterprise\";\nimport { currencyFormatter, PriceCell, ChangePercentCell, ChangeCell, ChartCell } from './templates';\n\nconst DEBOUNCE_TIME = 250;\nconst VOLUME_INITIAL = 100;\nconst VOLUME_STEP = 100;\nconst FREQUENCY_INITIAL = 100;\nconst FREQUENCY_STEP = 100;\n\nenum ControlButtons {\n    live,\n    optimizedLive,\n    liveAll,\n    stop\n}\n\nconst BUTTON_META = {\n    [ControlButtons.live]: {\n        title: 'Live Prices',\n        icon: 'refresh'\n    },\n    [ControlButtons.optimizedLive]: {\n        title: 'Live Prices (outside react)',\n        icon: 'refresh'\n    },\n    [ControlButtons.liveAll]: {\n        title: 'Live All Prices',\n        icon: 'refresh'\n    },\n    [ControlButtons.stop]: {\n        title: 'Stop',\n        icon: 'stop'\n    }\n};\n\nconst COLDEFS = [\n    { headerCheckboxSelection: true, checkboxSelection: true, width: 45 },\n    { field: 'Category', width: 120 },\n    { field: 'Type', width: 100 },\n    { field: 'Contract', width: 110 },\n    { field: 'Settlement', width: 100 },\n    { field: 'Region', width: 110 },\n    { field: 'Country', width: 100 },\n    { field: 'Open Price', width: 120, filter: 'agNumberColumnFilter', valueFormatter: currencyFormatter },\n    { field: 'Price', width: 130, filter: 'agNumberColumnFilter', cellRenderer: 'priceCell', valueFormatter: currencyFormatter },\n    { field: 'Change', width: 90, filter: 'agNumberColumnFilter', cellRenderer: 'changeCell', cellClass: 'numeric change', headerClass: 'headerAlignStyle' },\n    { field: 'Change(%)', width: 90, filter: 'agNumberColumnFilter', cellRenderer: 'changePercentCell', cellClass: 'numeric change' },\n    { field: 'Buy', width: 110, filter: 'agNumberColumnFilter', valueFormatter: currencyFormatter },\n    { field: 'Sell', width: 110, filter: 'agNumberColumnFilter', valueFormatter: currencyFormatter },\n    { field: 'Spread', width: 110, filter: 'agNumberColumnFilter', valueFormatter: currencyFormatter },\n    { field: 'Volume', width: 110, filter: 'agNumberColumnFilter', valueFormatter: currencyFormatter },\n    { field: 'High(D)', width: 110, filter: 'agNumberColumnFilter', valueFormatter: currencyFormatter },\n    { field: 'Low(D)', width: 110, filter: 'agNumberColumnFilter', valueFormatter: currencyFormatter },\n    { field: 'High(Y)', width: 110, filter: 'agNumberColumnFilter', valueFormatter: currencyFormatter },\n    { field: 'Low(Y)', width: 110, filter: 'agNumberColumnFilter', valueFormatter: currencyFormatter },\n    { field: 'Start(Y)', width: 110, filter: 'agNumberColumnFilter', valueFormatter: currencyFormatter },\n    { field: 'Chart', width: 60, cellClass: 'center-text', cellRenderer: 'chartCell' },\n    { field: 'IndGrou', width: 100, filter: false },\n    { field: 'IndSect', width: 120, filter: false, resizable: true },\n    { field: 'IndSubg', width: 100, filter: false },\n    { field: 'SecType', width: 90, filter: false },\n    { field: 'IssuerN', width: 170, filter: false, resizable: true },\n    { field: 'Moodys', width: 60, filter: false },\n    { field: 'Fitch', width: 60, filter: false },\n    { field: 'DBRS', width: 60, filter: false },\n    { field: 'CollatT', width: 90, filter: false },\n    { field: 'Curncy', width: 60, filter: false },\n    { field: 'Security', width: 120, filter: false },\n    { field: 'sector', width: 80, filter: false },\n    { field: 'CUSIP', width: 100, filter: false },\n    { field: 'Ticker', width: 60, filter: false },\n    { field: 'Cpn', width: 80, filter: false },\n    { field: 'Maturity', width: 120, filter: false },\n    { field: 'KRD_3YR', width: 110, filter: false },\n    { field: 'ZV_SPREAD', width: 90, filter: false },\n    { field: 'KRD_5YR', width: 50, filter: false },\n    { field: 'KRD_1YR', width: 80, filter: false },\n    { field: 'IndGrou', width: 100, filter: false },\n    { field: 'IndSect', width: 100, filter: false, resizable: true },\n    { field: 'IndSubg', width: 100, filter: false },\n    { field: 'SecType', width: 90, filter: false },\n    { field: 'IssuerN', width: 170, filter: false, resizable: true },\n    { field: 'Moodys', width: 60, filter: false },\n    { field: 'Fitch', width: 60, filter: false },\n    { field: 'DBRS', width: 60, filter: false },\n    { field: 'CollatT', width: 90, filter: false },\n    { field: 'Curncy', width: 60, filter: false },\n    { field: 'Security', width: 120, filter: false },\n    { field: 'sector', width: 80, filter: false },\n    { field: 'CUSIP', width: 100, filter: false },\n    { field: 'Ticker', width: 60, filter: false },\n    { field: 'Cpn', width: 80, filter: false },\n    { field: 'Maturity', width: 120, filter: false },\n    { field: 'KRD_3YR', width: 110, filter: false },\n    { field: 'ZV_SPREAD', width: 90, filter: false },\n    { field: 'KRD_5YR', width: 50, filter: false },\n    { field: 'KRD_1YR', width: 80, filter: false },\n    { field: 'IndGrou', width: 100, filter: false },\n    { field: 'IndSect', width: 100, filter: false },\n    { field: 'IndSubg', width: 100, filter: false },\n    { field: 'SecType', width: 90, filter: false },\n    { field: 'IssuerN', width: 170, filter: false },\n    { field: 'Moodys', width: 60, filter: false },\n    { field: 'Fitch', width: 60, filter: false },\n    { field: 'DBRS', width: 60, filter: false },\n    { field: 'CollatT', width: 90, filter: false },\n    { field: 'Curncy', width: 60, filter: false },\n    { field: 'Security', width: 120, filter: false },\n    { field: 'sector', width: 80, filter: false },\n    { field: 'CUSIP', width: 100, filter: false },\n    { field: 'Ticker', width: 60, filter: false },\n    { field: 'Cpn', width: 80, filter: false },\n    { field: 'Maturity', width: 120, filter: false },\n    { field: 'KRD_3YR', width: 110, filter: false },\n    { field: 'ZV_SPREAD', width: 90, filter: false },\n    { field: 'KRD_5YR', width: 50, filter: false },\n    { field: 'KRD_1YR', width: 80, filter: false },\n    { field: 'IndGrou', width: 100, filter: false },\n    { field: 'IndSect', width: 100, filter: false },\n    { field: 'IndSubg', width: 100, filter: false },\n    { field: 'SecType', width: 90, filter: false },\n    { field: 'IssuerN', width: 170, filter: false },\n    { field: 'Moodys', width: 60, filter: false },\n    { field: 'Fitch', width: 60, filter: false },\n    { field: 'DBRS', width: 60, filter: false },\n    { field: 'CollatT', width: 90, filter: false },\n    { field: 'Curncy', width: 60, filter: false },\n    { field: 'Security', width: 120, filter: false },\n    { field: 'sector', width: 80, filter: false },\n    { field: 'CUSIP', width: 100, filter: false },\n    { field: 'Ticker', width: 60, filter: false },\n    { field: 'Cpn', width: 80, filter: false }\n];\n\nconst FRAMEWRKCOMPONENTS = {\n    priceCell: PriceCell,\n    changeCell: ChangeCell,\n    changePercentCell: ChangePercentCell,\n    chartCell: ChartCell\n};\n\nexport interface KendoGridProps extends DataProviderRenderProps { }\n\nexport const AgGrid: React.FC<KendoGridProps> = (props: KendoGridProps) => {\n    const agGridApiRef = React.useRef<any>(null);\n    const volumeRef = React.useRef(VOLUME_INITIAL);\n    const frequencyRef = React.useRef(FREQUENCY_INITIAL);\n    const [selectedButton, setSelectedButton] = React.useState(ControlButtons.stop);\n    const [liveUpdating, setLiveUpdating] = React.useState(false);\n\n    const debouncedDataReset = React.useMemo(\n        () => debounce((currentVolume?) => props.onDataReset!(currentVolume), DEBOUNCE_TIME),\n        [props.onDataReset]\n    );\n\n    React.useEffect(\n        () => {\n            props.onDataReset!(volumeRef.current);\n        },\n        []\n    );\n\n    const onVolumeChange = React.useCallback(\n        (event) => {\n            const currentVolume = Math.floor(parseInt(event.target.value) / VOLUME_STEP) * VOLUME_STEP;\n            volumeRef.current = currentVolume;\n            debouncedDataReset(currentVolume);\n        },\n        [debouncedDataReset]\n    );\n\n    const onFrequencyChange = React.useCallback(\n        (event) => {\n            frequencyRef.current = Math.floor(parseInt(event.target.value) / FREQUENCY_STEP) * FREQUENCY_STEP;\n            debouncedDataReset(volumeRef.current);\n        },\n        [debouncedDataReset]\n    );\n\n    const onSelectClick = React.useCallback(\n        (event) => {\n            const currentButton = Number(event.currentTarget.name);\n            setSelectedButton(currentButton);\n\n            switch (currentButton) {\n                case ControlButtons.live:\n                    props.onStartLiveUpdate!(frequencyRef.current);\n                    setLiveUpdating(true);\n                    break;\n                case ControlButtons.optimizedLive:\n                    props.onStartOptimizedLiveUpdate!(frequencyRef.current, onDataUpdate);\n                    setLiveUpdating(true);\n                    break;\n                case ControlButtons.liveAll:\n                    props.onStartLiveUpdateAll!(frequencyRef.current);\n                    setLiveUpdating(true);\n                    break;\n                case ControlButtons.stop:\n                    props.onStopLiveUpdate!();\n                    setLiveUpdating(false);\n                    break;\n                default:\n            }\n        },\n        [debouncedDataReset, setLiveUpdating, setSelectedButton]\n    );\n\n    const onExcelExport = React.useCallback(\n        () => {\n            if (agGridApiRef.current) {\n                agGridApiRef.current!.exportDataAsExcel();\n            }\n        },\n        []\n    );\n\n    const onGridReady = React.useCallback(\n        (event) => {\n            agGridApiRef.current = event.api;\n        },\n        []\n    );\n\n    const onDataUpdate = React.useCallback(\n        (newData) => {\n            const api = agGridApiRef.current;\n\n            // updating records ourside react is required for meaningful performance with this product\n            api.batchUpdateRowData({update: newData});\n        },\n        []\n    );\n\n    return (\n        <>\n            <div className={'controls-holder'} style={{ maxWidth: 1350 }}>\n                <div className={'switches'}>\n                    <div className={'control-item'}>\n                        <div style={{ minWidth: 140 }}>\n                            <input type={'checkbox'} />\n                            &nbsp;Grouped\n                        </div>\n                    </div>\n                    <div className={'fintech-slider control-item'}>\n                        <label>\n                            Records: {volumeRef.current} <br />\n                            <input\n                                type=\"range\"\n                                min={0}\n                                max={10000}\n                                defaultValue={volumeRef.current}\n                                onChange={onVolumeChange}\n                                id=\"myRange\"\n                                style={{\n                                    opacity: liveUpdating ? 0.4 : 1\n                                }}\n                            />\n                        </label>\n                    </div>\n                    <div className={'fintech-slider control-item'}>\n                        <label>\n                            Frequency: {frequencyRef.current} ms <br />\n                            <input\n                                type={'range'}\n                                min={100}\n                                max={3000}\n                                step={10}\n                                defaultValue={frequencyRef.current}\n                                onChange={onFrequencyChange}\n                                disabled={liveUpdating}\n                                style={{\n                                    opacity: liveUpdating ? 0.4 : 1\n                                }}\n                            />\n                        </label>\n                    </div>\n                </div>\n                <div className={'control-item fintech-play-controls'}>\n                    <div className={'intechsample-btn-group'}>\n                        {\n                            Object\n                                .keys(ControlButtons)\n                                .filter(key => typeof ControlButtons[key as any] !== 'number')\n                                .map(\n                                    (key) => (\n                                        <button\n                                            style={{\n                                                border: selectedButton === Number(key) ? '1px solid red' : '1px solid gray',\n                                                width: 200\n                                            }}\n                                            onClick={onSelectClick}\n                                            name={key}\n                                        >\n                                            {BUTTON_META[key].title}\n                                        </button>\n                                    )\n                                )\n                        }\n                    </div>\n                </div>\n            </div>\n            <div className={'sample-toolbar'}>\n                {\n                    selectedButton === ControlButtons.live && (\n                        <span>\n                            Feeding {volumeRef.current} records every {frequencyRef.current / 1000} sec. {volumeRef.current / 5} records updated.\n                        </span>\n                    )\n                }\n                {\n                    selectedButton === ControlButtons.liveAll && (\n                        <span>\n                            Feeding {volumeRef.current} records every {frequencyRef.current / 1000} sec. {volumeRef.current} records updated.\n                        </span>\n                    )\n                }\n            </div>\n            <div\n                className=\"ag-theme-balham\"\n                style={{\n                    width: 1350,\n                    height: 800\n                }}\n            >\n                <button onClick={onExcelExport}>Export to excel</button>\n                <AgGridReact\n                    enableSorting={true}\n                    rowHeight={44}\n                    enableColResize={false}\n                    rowData={props.data}\n                    onGridReady={onGridReady}\n                    frameworkComponents={FRAMEWRKCOMPONENTS}\n                    columnDefs={COLDEFS}\n                    getRowNodeId={(dataItem) => dataItem.ID}\n                />\n            </div>\n        </>\n    );\n}\n\nAgGrid.displayName = 'AgGrid';\n","/* tslint:disable */\nexport const REGIONS: any[] = [\n    {\n        \"Region\": \"North America\",\n        \"Countries\": [\"Canada\", \"United States\", \"Mexico\"]\n    },\n    {\n        \"Region\": \"Middle East\",\n        \"Countries\": [\"Turkey\", \"Iraq\", \"Saudi Arabia\", \"Syria\", \"UAE\", \"Israel\", \"Jordan\", \"Lebanon\", \"Oman\", \"Kuwait\", \"Qatar\", \"Bahrain\", \"Iran\"]\n    },\n    {\n        \"Region\": \"Europe\",\n        \"Countries\": [\"Russia\", \"Germany\", \"France\", \"United Kingdom\", \"Italy\", \"Spain\", \"Poland\", \"Romania\", \"Netherlands\", \"Belgium\", \"Greece\",\n            \"Portugal\", \"Czech Republic\", \"Hungary\", \"Sweden\", \"Austria\", \"Switzerland\", \"Bulgaria\", \"Denmark\", \"Finland\", \"Slovakia\", \"Norway\",\n            \"Ireland\", \"Croatia\", \"Slovenia\", \"Estonia\", \"Iceland\",]\n    },\n    {\n        \"Region\": \"Africa\",\n        \"Countries\": [\"Nigeria\", \"Ethiopia\", \"Egypt\", \"South Africa\", \"Algeria\", \"Morocco\", \"Cameroon\", \"Niger\", \"Senegal\", \"Tunisia\", \"Libya\"]\n    },\n    {\n        \"Region\": \"Asia Pacific\",\n        \"Countries\": [\"Afghanistan\", \"Australia\", \"Azerbaijan\", \"China\", \"Hong Kong\", \"India\", \"Indonesia\",\n            \"Japan\", \"Malaysia\", \"New Zealand\", \"Pakistan\", \"Philippines\", \"Korea\", \"Singapore\", \"Taiwan\", \"Thailand\"]\n    },\n    {\n        \"Region\": \"South America\",\n        \"Countries\": [\"Argentina\", \"Bolivia\", \"Brazil\", \"Chile\", \"Colombia\", \"Ecuador\", \"Guyana\", \"Paraguay\", \"Peru\", \"Suriname\", \"Uruguay\", \"Venezuela\"]\n    },\n\n]\n\nexport const DealType: any[] = [\n    \"Buy\", \"Sell\"\n]\n\nexport const Contract: any[] = [\n    \"Forwards\", \"Futures\", \"Options\", \"Swap\", \"CFD\"\n]\n\nexport const Settlement: any[] = [\n    \"Deliverable\", \"Cash\"\n]\n\nexport const MOCKFINANCEDATA: any[] = [\n    {\n        \"IndGrou\": \"Airlines\",\n        \"IndSect\": \"Consumer, Cyclical\",\n        \"IndSubg\": \"Airlines\",\n        \"SecType\": \"PUBLIC\",\n        // tslint:disable-next-line:object-literal-sort-keys\n        \"CpnTyp\": \"FIXED\",\n        \"IssuerN\": \"AMERICAN AIRLINES GROUP\",\n        \"Moodys\": \"WR\",\n        \"Fitch\": \"N.A.\",\n        \"DBRS\": \"N.A.\",\n        \"CollatT\": \"NEW MONEY\",\n        \"Curncy\": \"USD\",\n        \"Security\": \"001765866 Pfd\",\n        \"sector\": \"Pfd\",\n        \"CUSIP\": \"1765866\",\n        \"Ticker\": \"AAL\",\n        \"Cpn\": \"7.875\",\n        \"Maturity\": \"7/13/1939\",\n        \"KRD_3YR\": 0.00006,\n        \"RISK_COUNTRY\": \"\",\n        \"MUNI_SECTOR\": \"\",\n        \"ZV_SPREAD\": 28.302,\n        \"KRD_5YR\": 0,\n        \"KRD_1YR\": -0.00187,\n        \"PD_WALA\": null\n    }];\n\nexport const DATA: any[] = [\n    {\n        \"Category\": \"Metal\",\n        \"Type\": \"Gold\",\n        \"Spread\": 0.01,\n        \"Open Price\": 1281.10,\n        \"Price\": 1280.7317,\n        \"Buy\": 1280.7267,\n        \"Sell\": 1280.7367,\n        \"Change\": -0.3683,\n        \"Change(%)\": -0.0287,\n        \"Volume\": 48387,\n        \"High(D)\": 1289.50,\n        \"Low(D)\": 1279.10,\n        \"High(Y)\": 1306,\n        \"Low(Y)\": 1047.20,\n        \"Start(Y)\": 1176.60,\n        \"Change On Year(%)\": 8.8502\n    },\n    {\n        \"Category\": \"Metal\",\n        \"Type\": \"Silver\",\n        \"Spread\": 0.01,\n        \"Open Price\": 17.43,\n        \"Price\": 17.42,\n        \"Buy\": 17.43,\n        \"Sell\": 17.43,\n        \"Change\": -0.01,\n        \"Change(%)\": -0.0574,\n        \"Volume\": 11720,\n        \"High(D)\": 17.51,\n        \"Low(D)\": 17.37,\n        \"High(Y)\": 18.06,\n        \"Low(Y)\": 13.73,\n        \"Start(Y)\": 15.895,\n        \"Change On Year(%)\": 9.5942\n    },\n    {\n        \"Category\": \"Metal\",\n        \"Type\": \"Copper\",\n        \"Spread\": 0.02,\n        \"Open Price\": 2.123,\n        \"Price\": 2.113,\n        \"Buy\": 2.123,\n        \"Sell\": 2.123,\n        \"Change\": -0.01,\n        \"Change(%)\": -0.471,\n        \"Volume\": 28819,\n        \"High(D)\": 2.16,\n        \"Low(D)\": 2.11,\n        \"High(Y)\": 2.94,\n        \"Low(Y)\": 1.96,\n        \"Start(Y)\": 2.45,\n        \"Change On Year(%)\": -13.7551\n    },\n    {\n        \"Category\": \"Metal\",\n        \"Type\": \"Platinum\",\n        \"Spread\": 0.01,\n        \"Open Price\": 1071.60,\n        \"Price\": 1071.0993,\n        \"Buy\": 1071.0943,\n        \"Sell\": 1071.1043,\n        \"Change\": -0.5007,\n        \"Change(%)\": -0.0467,\n        \"Volume\": 3039,\n        \"High(D)\": 1081.20,\n        \"Low(D)\": 1070.50,\n        \"High(Y)\": 1120.60,\n        \"Low(Y)\": 812.40,\n        \"Start(Y)\": 966.50,\n        \"Change On Year(%)\": 10.8225\n    },\n    {\n        \"Category\": \"Metal\",\n        \"Type\": \"Palladium\",\n        \"Spread\": 0.01,\n        \"Open Price\": 600.55,\n        \"Price\": 601.0005,\n        \"Buy\": 600.9955,\n        \"Sell\": 601.0055,\n        \"Change\": 0.4505,\n        \"Change(%)\": 0.075,\n        \"Volume\": 651,\n        \"High(D)\": 607.20,\n        \"Low(D)\": 598.40,\n        \"High(Y)\": 690,\n        \"Low(Y)\": 458.6,\n        \"Start(Y)\": 574.3,\n        \"Change On Year(%)\": 4.6492\n    },\n    {\n        \"Category\": \"Oil\",\n        \"Type\": \"Oil\",\n        \"Spread\": 0.015,\n        \"Open Price\": 45.54,\n        \"Price\": 45.7899,\n        \"Buy\": 45.7824,\n        \"Sell\": 45.7974,\n        \"Change\": 0.2499,\n        \"Change(%)\": 0.5487,\n        \"Volume\": 107196,\n        \"High(D)\": 45.94,\n        \"Low(D)\": 45.00,\n        \"High(Y)\": 65.28,\n        \"Low(Y)\": 30.79,\n        \"Start(Y)\": 48.035,\n        \"Change On Year(%)\": -4.6739\n    },\n    {\n        \"Category\": \"Oil\",\n        \"Type\": \"Brent\",\n        \"Spread\": 0.01,\n        \"Open Price\": 46.06,\n        \"Price\": 46.05,\n        \"Buy\": 46.06,\n        \"Sell\": 46.06,\n        \"Change\": -0.01,\n        \"Change(%)\": -0.0217,\n        \"Volume\": 59818,\n        \"High(D)\": 46.48,\n        \"Low(D)\": 45.60,\n        \"High(Y)\": 71.14,\n        \"Low(Y)\": 30.02,\n        \"Start(Y)\": 50.58,\n        \"Change On Year(%)\": -8.9561\n    },\n    {\n        \"Category\": \"Oil\",\n        \"Type\": \"Natural Gas\",\n        \"Spread\": 0.02,\n        \"Open Price\": 2.094,\n        \"Price\": 2.104,\n        \"Buy\": 2.094,\n        \"Sell\": 2.094,\n        \"Change\": 0.01,\n        \"Change(%)\": 0.4776,\n        \"Volume\": 2783,\n        \"High(D)\": 2.11,\n        \"Low(D)\": 2.09,\n        \"High(Y)\": 3.20,\n        \"Low(Y)\": 1.84,\n        \"Start(Y)\": 2.52,\n        \"Change On Year(%)\": -16.5079\n    },\n    {\n        \"Category\": \"Oil\",\n        \"Type\": \"RBOB Gas\",\n        \"Spread\": 0.015,\n        \"Open Price\": 1.5086,\n        \"Price\": 1.9532,\n        \"Buy\": 1.9457,\n        \"Sell\": 1.9607,\n        \"Change\": 0.4446,\n        \"Change(%)\": 29.4686,\n        \"Volume\": 2646,\n        \"High(D)\": 1.9532,\n        \"Low(D)\": 1.50,\n        \"High(Y)\": 2.05,\n        \"Low(Y)\": 1.15,\n        \"Start(Y)\": 1.60,\n        \"Change On Year(%)\": 22.0727\n    },\n    {\n        \"Category\": \"Oil\",\n        \"Type\": \"Diesel\",\n        \"Spread\": 0.015,\n        \"Open Price\": 1.3474,\n        \"Price\": 1.3574,\n        \"Buy\": 1.3474,\n        \"Sell\": 1.3474,\n        \"Change\": 0.01,\n        \"Change(%)\": 0.7422,\n        \"Volume\": 2971,\n        \"High(D)\": 1.36,\n        \"Low(D)\": 1.34,\n        \"High(Y)\": 2.11,\n        \"Low(Y)\": 0.92,\n        \"Start(Y)\": 1.515,\n        \"Change On Year(%)\": -10.4026\n    },\n    {\n        \"Category\": \"Oil\",\n        \"Type\": \"Ethanol\",\n        \"Spread\": 0.01,\n        \"Open Price\": 1.512,\n        \"Price\": 2.7538,\n        \"Buy\": 2.7488,\n        \"Sell\": 2.7588,\n        \"Change\": 1.2418,\n        \"Change(%)\": 82.1323,\n        \"Volume\": 14,\n        \"High(D)\": 2.7538,\n        \"Low(D)\": 1.1168,\n        \"High(Y)\": 2.7538,\n        \"Low(Y)\": 1.1168,\n        \"Start(Y)\": 1.475,\n        \"Change On Year(%)\": 86.7011\n    },\n    {\n        \"Category\": \"Oil\",\n        \"Type\": \"Uranium\",\n        \"Spread\": 0.02,\n        \"Open Price\": 27.55,\n        \"Price\": 27.58,\n        \"Buy\": 27.55,\n        \"Sell\": 27.55,\n        \"Change\": 0.03,\n        \"Change(%)\": 0.1089,\n        \"Volume\": 12,\n        \"High(D)\": 27.55,\n        \"Low(D)\": 27.55,\n        \"High(Y)\": 29.32,\n        \"Low(Y)\": 21.28,\n        \"Start(Y)\": 25.30,\n        \"Change On Year(%)\": 9.0119\n    },\n    {\n        \"Category\": \"Oil\",\n        \"Type\": \"Coal\",\n        \"Spread\": 0.015,\n        \"Open Price\": 0.4363,\n        \"Price\": 0.4163,\n        \"Buy\": 0.4363,\n        \"Sell\": 0.4363,\n        \"Change\": -0.02,\n        \"Change(%)\": -4.584,\n        \"Volume\": 3,\n        \"High(D)\": 0.4363,\n        \"Low(D)\": 0.4363,\n        \"High(Y)\": 0.4841,\n        \"Low(Y)\": 0.3954,\n        \"Start(Y)\": 0.4398,\n        \"Change On Year(%)\": -5.3326\n    },\n    {\n        \"Category\": \"Agriculture\",\n        \"Type\": \"Wheat\",\n        \"Spread\": 0.01,\n        \"Open Price\": 465.50,\n        \"Price\": 465.52,\n        \"Buy\": 465.50,\n        \"Sell\": 465.50,\n        \"Change\": 0.02,\n        \"Change(%)\": 0.0043,\n        \"Volume\": 4318,\n        \"High(D)\": 467.00,\n        \"Low(D)\": 463.25,\n        \"High(Y)\": 628.50,\n        \"Low(Y)\": 449.50,\n        \"Start(Y)\": 539.00,\n        \"Change On Year(%)\": -13.6327\n    },\n    {\n        \"Category\": \"Agriculture\",\n        \"Type\": \"Corn\",\n        \"Spread\": 0.01,\n        \"Open Price\": 379.50,\n        \"Price\": 379.8026,\n        \"Buy\": 379.7976,\n        \"Sell\": 379.8076,\n        \"Change\": 0.3026,\n        \"Change(%)\": 0.0797,\n        \"Volume\": 11266,\n        \"High(D)\": 381.00,\n        \"Low(D)\": 377.75,\n        \"High(Y)\": 471.25,\n        \"Low(Y)\": 351.25,\n        \"Start(Y)\": 411.25,\n        \"Change On Year(%)\": -7.6468\n    },\n    {\n        \"Category\": \"Agriculture\",\n        \"Type\": \"Sugar\",\n        \"Spread\": 0.01,\n        \"Open Price\": 15.68,\n        \"Price\": 14.6742,\n        \"Buy\": 14.6692,\n        \"Sell\": 14.6792,\n        \"Change\": -1.0058,\n        \"Change(%)\": -6.4146,\n        \"Volume\": 4949,\n        \"High(D)\": 15.70,\n        \"Low(D)\": 14.6742,\n        \"High(Y)\": 16.87,\n        \"Low(Y)\": 11.37,\n        \"Start(Y)\": 14.12,\n        \"Change On Year(%)\": 3.9249\n    },\n    {\n        \"Category\": \"Agriculture\",\n        \"Type\": \"Soybean\",\n        \"Spread\": 0.01,\n        \"Open Price\": 1038.00,\n        \"Price\": 1038.6171,\n        \"Buy\": 1038.6121,\n        \"Sell\": 1038.6221,\n        \"Change\": 0.6171,\n        \"Change(%)\": 0.0595,\n        \"Volume\": 20356,\n        \"High(D)\": 1044.00,\n        \"Low(D)\": 1031.75,\n        \"High(Y)\": 1057.00,\n        \"Low(Y)\": 859.50,\n        \"Start(Y)\": 958.25,\n        \"Change On Year(%)\": 8.3869\n    },\n    {\n        \"Category\": \"Agriculture\",\n        \"Type\": \"Soy oil\",\n        \"Spread\": 0.01,\n        \"Open Price\": 33.26,\n        \"Price\": 33.7712,\n        \"Buy\": 33.7662,\n        \"Sell\": 33.7762,\n        \"Change\": 0.5112,\n        \"Change(%)\": 1.5371,\n        \"Volume\": 10592,\n        \"High(D)\": 33.7712,\n        \"Low(D)\": 33.06,\n        \"High(Y)\": 35.43,\n        \"Low(Y)\": 26.61,\n        \"Start(Y)\": 31.02,\n        \"Change On Year(%)\": 8.8692\n    },\n    {\n        \"Category\": \"Agriculture\",\n        \"Type\": \"Soy Meat\",\n        \"Spread\": 0.01,\n        \"Open Price\": 342.60,\n        \"Price\": 342.62,\n        \"Buy\": 342.60,\n        \"Sell\": 342.60,\n        \"Change\": 0.02,\n        \"Change(%)\": 0.0058,\n        \"Volume\": 5646,\n        \"High(D)\": 345.40,\n        \"Low(D)\": 340.30,\n        \"High(Y)\": 353.40,\n        \"Low(Y)\": 261.70,\n        \"Start(Y)\": 307.55,\n        \"Change On Year(%)\": 11.403\n    },\n    {\n        \"Category\": \"Agriculture\",\n        \"Type\": \"OJ Future\",\n        \"Spread\": 0.01,\n        \"Open Price\": 140.60,\n        \"Price\": 140.1893,\n        \"Buy\": 140.1843,\n        \"Sell\": 140.1943,\n        \"Change\": -0.4107,\n        \"Change(%)\": -0.2921,\n        \"Volume\": 7,\n        \"High(D)\": 140.1893,\n        \"Low(D)\": 0.00,\n        \"High(Y)\": 155.95,\n        \"Low(Y)\": 113.00,\n        \"Start(Y)\": 134.475,\n        \"Change On Year(%)\": 4.2493\n    },\n    {\n        \"Category\": \"Agriculture\",\n        \"Type\": \"Coffee\",\n        \"Spread\": 0.01,\n        \"Open Price\": 125.70,\n        \"Price\": 125.69,\n        \"Buy\": 125.70,\n        \"Sell\": 125.70,\n        \"Change\": -0.01,\n        \"Change(%)\": -0.008,\n        \"Volume\": 1654,\n        \"High(D)\": 125.80,\n        \"Low(D)\": 125.00,\n        \"High(Y)\": 155.75,\n        \"Low(Y)\": 115.35,\n        \"Start(Y)\": 135.55,\n        \"Change On Year(%)\": -7.2741\n    },\n    {\n        \"Category\": \"Agriculture\",\n        \"Type\": \"Cocoa\",\n        \"Spread\": 0.01,\n        \"Open Price\": 3076.00,\n        \"Price\": 3076.03,\n        \"Buy\": 3076.00,\n        \"Sell\": 3076.00,\n        \"Change\": 0.03,\n        \"Change(%)\": 0.001,\n        \"Volume\": 978,\n        \"High(D)\": 3078.00,\n        \"Low(D)\": 3066.00,\n        \"High(Y)\": 3406.00,\n        \"Low(Y)\": 2746.00,\n        \"Start(Y)\": 3076.00,\n        \"Change On Year(%)\": 0.001\n    },\n    {\n        \"Category\": \"Agriculture\",\n        \"Type\": \"Rice\",\n        \"Spread\": 0.01,\n        \"Open Price\": 11.245,\n        \"Price\": 10.4154,\n        \"Buy\": 10.4104,\n        \"Sell\": 10.4204,\n        \"Change\": -0.8296,\n        \"Change(%)\": -7.3779,\n        \"Volume\": 220,\n        \"High(D)\": 11.38,\n        \"Low(D)\": 10.4154,\n        \"High(Y)\": 14.14,\n        \"Low(Y)\": 9.70,\n        \"Start(Y)\": 11.92,\n        \"Change On Year(%)\": -12.6228\n    },\n    {\n        \"Category\": \"Agriculture\",\n        \"Type\": \"Oats\",\n        \"Spread\": 0.01,\n        \"Open Price\": 194.50,\n        \"Price\": 194.2178,\n        \"Buy\": 194.2128,\n        \"Sell\": 194.2228,\n        \"Change\": -0.2822,\n        \"Change(%)\": -0.1451,\n        \"Volume\": 64,\n        \"High(D)\": 195.75,\n        \"Low(D)\": 194.00,\n        \"High(Y)\": 241.25,\n        \"Low(Y)\": 183.75,\n        \"Start(Y)\": 212.50,\n        \"Change On Year(%)\": -8.6034\n    },\n    {\n        \"Category\": \"Agriculture\",\n        \"Type\": \"Milk\",\n        \"Spread\": 0.01,\n        \"Open Price\": 12.87,\n        \"Price\": 12.86,\n        \"Buy\": 12.87,\n        \"Sell\": 12.87,\n        \"Change\": -0.01,\n        \"Change(%)\": -0.0777,\n        \"Volume\": 7,\n        \"High(D)\": 12.89,\n        \"Low(D)\": 12.81,\n        \"High(Y)\": 16.96,\n        \"Low(Y)\": 12.81,\n        \"Start(Y)\": 14.885,\n        \"Change On Year(%)\": -13.6043\n    },\n    {\n        \"Category\": \"Agriculture\",\n        \"Type\": \"Cotton\",\n        \"Spread\": 0.01,\n        \"Open Price\": 61.77,\n        \"Price\": 61.76,\n        \"Buy\": 61.77,\n        \"Sell\": 61.77,\n        \"Change\": -0.01,\n        \"Change(%)\": -0.0162,\n        \"Volume\": 3612,\n        \"High(D)\": 62.06,\n        \"Low(D)\": 61.32,\n        \"High(Y)\": 67.59,\n        \"Low(Y)\": 54.33,\n        \"Start(Y)\": 60.96,\n        \"Change On Year(%)\": 1.3123\n    },\n    {\n        \"Category\": \"Agriculture\",\n        \"Type\": \"Lumber\",\n        \"Spread\": 0.01,\n        \"Open Price\": 303.90,\n        \"Price\": 304.5994,\n        \"Buy\": 304.5944,\n        \"Sell\": 304.6044,\n        \"Change\": 0.6994,\n        \"Change(%)\": 0.2302,\n        \"Volume\": 2,\n        \"High(D)\": 304.5994,\n        \"Low(D)\": 303.90,\n        \"High(Y)\": 317.10,\n        \"Low(Y)\": 236.00,\n        \"Start(Y)\": 276.55,\n        \"Change On Year(%)\": 10.1426\n    },\n    {\n        \"Category\": \"Livestock\",\n        \"Type\": \"LV Cattle\",\n        \"Spread\": 0.01,\n        \"Open Price\": 120.725,\n        \"Price\": 120.705,\n        \"Buy\": 120.725,\n        \"Sell\": 120.725,\n        \"Change\": -0.02,\n        \"Change(%)\": -0.0166,\n        \"Volume\": 4,\n        \"High(D)\": 120.725,\n        \"Low(D)\": 120.725,\n        \"High(Y)\": 147.98,\n        \"Low(Y)\": 113.90,\n        \"Start(Y)\": 130.94,\n        \"Change On Year(%)\": -7.8166\n    },\n    {\n        \"Category\": \"Livestock\",\n        \"Type\": \"FD Cattle\",\n        \"Spread\": 0.01,\n        \"Open Price\": 147.175,\n        \"Price\": 148.6065,\n        \"Buy\": 148.6015,\n        \"Sell\": 148.6115,\n        \"Change\": 1.4315,\n        \"Change(%)\": 0.9727,\n        \"Volume\": 5,\n        \"High(D)\": 148.6065,\n        \"Low(D)\": 147.175,\n        \"High(Y)\": 190.00,\n        \"Low(Y)\": 138.10,\n        \"Start(Y)\": 164.05,\n        \"Change On Year(%)\": -9.4139\n    },\n    {\n        \"Category\": \"Livestock\",\n        \"Type\": \"Lean Hogs\",\n        \"Spread\": 0.01,\n        \"Open Price\": 81.275,\n        \"Price\": 81.8146,\n        \"Buy\": 81.8096,\n        \"Sell\": 81.8196,\n        \"Change\": 0.5396,\n        \"Change(%)\": 0.664,\n        \"Volume\": 1,\n        \"High(D)\": 81.8146,\n        \"Low(D)\": 81.275,\n        \"High(Y)\": 83.98,\n        \"Low(Y)\": 70.25,\n        \"Start(Y)\": 77.115,\n        \"Change On Year(%)\": 6.0943\n    },\n    {\n        \"Category\": \"Currencies\",\n        \"Type\": \"USD IDX Future\",\n        \"Spread\": 0.02,\n        \"Open Price\": 93.88,\n        \"Price\": 93.7719,\n        \"Buy\": 93.7619,\n        \"Sell\": 93.7819,\n        \"Change\": -0.1081,\n        \"Change(%)\": -0.1151,\n        \"Volume\": 5788,\n        \"High(D)\": 94.05,\n        \"Low(D)\": 93.7534,\n        \"High(Y)\": 100.70,\n        \"Low(Y)\": 91.88,\n        \"Start(Y)\": 96.29,\n        \"Change On Year(%)\": -2.6151\n    },\n    {\n        \"Category\": \"Currencies\",\n        \"Type\": \"USD/JPY Future\",\n        \"Spread\": 0.02,\n        \"Open Price\": 9275.50,\n        \"Price\": 9277.3342,\n        \"Buy\": 9277.3242,\n        \"Sell\": 9277.3442,\n        \"Change\": 1.8342,\n        \"Change(%)\": 0.0198,\n        \"Volume\": 47734,\n        \"High(D)\": 9277.3342,\n        \"Low(D)\": 0.93,\n        \"High(Y)\": 9483.00,\n        \"Low(Y)\": 0.93,\n        \"Start(Y)\": 4741.965,\n        \"Change On Year(%)\": 95.6432\n    },\n    {\n        \"Category\": \"Currencies\",\n        \"Type\": \"GBP/USD Future\",\n        \"Spread\": 0.02,\n        \"Open Price\": 1.4464,\n        \"Price\": 1.1941,\n        \"Buy\": 1.1841,\n        \"Sell\": 1.2041,\n        \"Change\": -0.2523,\n        \"Change(%)\": -17.4441,\n        \"Volume\": 29450,\n        \"High(D)\": 1.45,\n        \"Low(D)\": 1.1941,\n        \"High(Y)\": 1.59,\n        \"Low(Y)\": 1.1941,\n        \"Start(Y)\": 1.485,\n        \"Change On Year(%)\": -19.59\n    },\n    {\n        \"Category\": \"Currencies\",\n        \"Type\": \"AUD/USD Future\",\n        \"Spread\": 0.02,\n        \"Open Price\": 0.7344,\n        \"Price\": 0.7444,\n        \"Buy\": 0.7344,\n        \"Sell\": 0.7344,\n        \"Change\": 0.01,\n        \"Change(%)\": 1.3617,\n        \"Volume\": 36764,\n        \"High(D)\": 0.74,\n        \"Low(D)\": 0.73,\n        \"High(Y)\": 0.79,\n        \"Low(Y)\": 0.68,\n        \"Start(Y)\": 0.735,\n        \"Change On Year(%)\": 1.2789\n    },\n    {\n        \"Category\": \"Currencies\",\n        \"Type\": \"USD/CAD Future\",\n        \"Spread\": 0.02,\n        \"Open Price\": 0.7744,\n        \"Price\": 0.9545,\n        \"Buy\": 0.9445,\n        \"Sell\": 0.9645,\n        \"Change\": 0.1801,\n        \"Change(%)\": 23.2622,\n        \"Volume\": 13669,\n        \"High(D)\": 0.9545,\n        \"Low(D)\": 0.77,\n        \"High(Y)\": 0.9545,\n        \"Low(Y)\": 0.68,\n        \"Start(Y)\": 0.755,\n        \"Change On Year(%)\": 26.4295\n    },\n    {\n        \"Category\": \"Currencies\",\n        \"Type\": \"USD/CHF Future\",\n        \"Spread\": 0.02,\n        \"Open Price\": 1.0337,\n        \"Price\": 1.0437,\n        \"Buy\": 1.0337,\n        \"Sell\": 1.0337,\n        \"Change\": 0.01,\n        \"Change(%)\": 0.9674,\n        \"Volume\": 5550,\n        \"High(D)\": 1.03,\n        \"Low(D)\": 1.03,\n        \"High(Y)\": 1.11,\n        \"Low(Y)\": 0.98,\n        \"Start(Y)\": 1.045,\n        \"Change On Year(%)\": -0.1244\n    },\n    {\n        \"Category\": \"Index\",\n        \"Type\": \"DOW Future\",\n        \"Spread\": 0.01,\n        \"Open Price\": 17711.00,\n        \"Price\": 17712.1515,\n        \"Buy\": 17712.1465,\n        \"Sell\": 17712.1565,\n        \"Change\": 1.1515,\n        \"Change(%)\": 0.0065,\n        \"Volume\": 22236,\n        \"High(D)\": 17727.00,\n        \"Low(D)\": 17642.00,\n        \"High(Y)\": 18083.00,\n        \"Low(Y)\": 15299.00,\n        \"Start(Y)\": 16691.00,\n        \"Change On Year(%)\": 6.118\n    },\n    {\n        \"Category\": \"Index\",\n        \"Type\": \"S&P Future\",\n        \"Spread\": 0.01,\n        \"Open Price\": 2057.50,\n        \"Price\": 2056.6018,\n        \"Buy\": 2056.5968,\n        \"Sell\": 2056.6068,\n        \"Change\": -0.8982,\n        \"Change(%)\": -0.0437,\n        \"Volume\": 142780,\n        \"High(D)\": 2059.50,\n        \"Low(D)\": 2049.00,\n        \"High(Y)\": 2105.50,\n        \"Low(Y)\": 1794.50,\n        \"Start(Y)\": 1950.00,\n        \"Change On Year(%)\": 5.4668\n    },\n    {\n        \"Category\": \"Index\",\n        \"Type\": \"NAS Future\",\n        \"Spread\": 0.01,\n        \"Open Price\": 4341.25,\n        \"Price\": 4341.28,\n        \"Buy\": 4341.25,\n        \"Sell\": 4341.25,\n        \"Change\": 0.03,\n        \"Change(%)\": 0.0007,\n        \"Volume\": 18259,\n        \"High(D)\": 4347.00,\n        \"Low(D)\": 4318.00,\n        \"High(Y)\": 4719.75,\n        \"Low(Y)\": 3867.75,\n        \"Start(Y)\": 4293.75,\n        \"Change On Year(%)\": 1.107\n    },\n    {\n        \"Category\": \"Index\",\n        \"Type\": \"S&P MID MINI\",\n        \"Spread\": 0.01,\n        \"Open Price\": 1454.30,\n        \"Price\": 1455.7812,\n        \"Buy\": 1455.7762,\n        \"Sell\": 1455.7862,\n        \"Change\": 1.4812,\n        \"Change(%)\": 0.1018,\n        \"Volume\": 338,\n        \"High(D)\": 1455.7812,\n        \"Low(D)\": 1448.00,\n        \"High(Y)\": 1527.30,\n        \"Low(Y)\": 1236.00,\n        \"Start(Y)\": 1381.65,\n        \"Change On Year(%)\": 5.3654\n    },\n    {\n        \"Category\": \"Index\",\n        \"Type\": \"S&P 600 MINI\",\n        \"Spread\": 0.01,\n        \"Open Price\": 687.90,\n        \"Price\": 687.88,\n        \"Buy\": 687.90,\n        \"Sell\": 687.90,\n        \"Change\": -0.02,\n        \"Change(%)\": -0.0029,\n        \"Volume\": 0,\n        \"High(D)\": 0.00,\n        \"Low(D)\": 0.00,\n        \"High(Y)\": 620.32,\n        \"Low(Y)\": 595.90,\n        \"Start(Y)\": 608.11,\n        \"Change On Year(%)\": 13.1177\n    },\n    {\n        \"Category\": \"Interest Rate\",\n        \"Type\": \"US 30YR Future\",\n        \"Spread\": 0.01,\n        \"Open Price\": 164.875,\n        \"Price\": 164.1582,\n        \"Buy\": 164.1532,\n        \"Sell\": 164.1632,\n        \"Change\": -0.7168,\n        \"Change(%)\": -0.4347,\n        \"Volume\": 28012,\n        \"High(D)\": 165.25,\n        \"Low(D)\": 164.0385,\n        \"High(Y)\": 169.38,\n        \"Low(Y)\": 151.47,\n        \"Start(Y)\": 160.425,\n        \"Change On Year(%)\": 2.3271\n    },\n    {\n        \"Category\": \"Interest Rate\",\n        \"Type\": \"US 2Y Future\",\n        \"Spread\": 0.01,\n        \"Open Price\": 109.3984,\n        \"Price\": 109.3884,\n        \"Buy\": 109.3984,\n        \"Sell\": 109.3984,\n        \"Change\": -0.01,\n        \"Change(%)\": -0.0091,\n        \"Volume\": 17742,\n        \"High(D)\": 109.41,\n        \"Low(D)\": 109.38,\n        \"High(Y)\": 109.80,\n        \"Low(Y)\": 108.62,\n        \"Start(Y)\": 109.21,\n        \"Change On Year(%)\": 0.1634\n    },\n    {\n        \"Category\": \"Interest Rate\",\n        \"Type\": \"US 10YR Future\",\n        \"Spread\": 0.01,\n        \"Open Price\": 130.5625,\n        \"Price\": 130.5825,\n        \"Buy\": 130.5625,\n        \"Sell\": 130.5625,\n        \"Change\": 0.02,\n        \"Change(%)\": 0.0153,\n        \"Volume\": 189310,\n        \"High(D)\": 130.63,\n        \"Low(D)\": 130.44,\n        \"High(Y)\": 132.64,\n        \"Low(Y)\": 125.48,\n        \"Start(Y)\": 129.06,\n        \"Change On Year(%)\": 1.1797\n    },\n    {\n        \"Category\": \"Interest Rate\",\n        \"Type\": \"Euro$ 3M\",\n        \"Spread\": 0.01,\n        \"Open Price\": 99.18,\n        \"Price\": 99.17,\n        \"Buy\": 99.18,\n        \"Sell\": 99.18,\n        \"Change\": -0.01,\n        \"Change(%)\": -0.0101,\n        \"Volume\": 29509,\n        \"High(D)\": 99.18,\n        \"Low(D)\": 99.17,\n        \"High(Y)\": 99.38,\n        \"Low(Y)\": 98.41,\n        \"Start(Y)\": 98.895,\n        \"Change On Year(%)\": 0.2781\n    }\n];\n\ninterface IResponse {\n    data: any[];\n    recordsUpdated: number;\n}\n\n/* tslint:enable */\nexport class FinancialData {\n    public generateData(count: number): any[] {\n        console.time('generateData');\n        const currData: any[] = [];\n        for (let i = 0; i < count; i++) {\n            const rand = Math.floor(Math.random() * Math.floor(DATA.length));\n            const dataObj = Object.assign({}, DATA[rand]);\n\n            dataObj.Settlement = Settlement[this.generateRandomNumber(0, 1)];\n            dataObj.Contract = Contract[this.generateRandomNumber(0, 4)];\n            const region = REGIONS[this.generateRandomNumber(0, 5)];\n            dataObj.Region = region.Region;\n            dataObj.Country = this.randomizeCountry(region);\n            // for (let y = 0; y < 80; y++) {\n            //     dataObj[\"Text\" + y] = \"Text\";\n            // }\n\n            for (const mockData of MOCKFINANCEDATA) {\n                for (const prop in mockData) {\n                    if (mockData.hasOwnProperty(prop)) {\n                        dataObj[prop] = mockData[prop];\n                    }\n                }\n            }\n\n            dataObj.ID = i;\n            this.randomizeObjectData(dataObj);\n            currData.push(dataObj);\n        }\n        console.timeEnd('generateData');\n        return currData;\n    }\n\n    public updateAllPrices(data: any[]): any[] {\n        const currData: any[] = [];\n        for (const dataRow of data) {\n            const dataObj = Object.assign({}, dataRow);\n            this.randomizeObjectData(dataObj);\n            currData.push(dataObj);\n        }\n        return currData;\n    }\n\n    public updateRandomPrices(data: any[]): any {\n        const currData = data.slice(0, data.length + 1);\n        let y = 0;\n        for (let i = Math.round(Math.random() * 10); i < data.length; i += Math.round(Math.random() * 10)) {\n            const dataObj = Object.assign({}, data[i]);\n            this.randomizeObjectData(dataObj);\n            currData[i] = dataObj;\n            y++;\n        }\n        // return {data: currData, recordsUpdated: y };\n        return currData;\n    }\n\n    public updateRandomPrices2(data: any[]): IResponse {\n        const currData = data.slice(0, data.length + 1);\n        let y = 0;\n        for (let i = Math.round(Math.random() * 10); i < data.length; i += Math.round(Math.random() * 10)) {\n            const dataObj = Object.assign({}, data[i]);\n            this.randomizeObjectData(dataObj);\n            currData[i] = dataObj;\n            y++;\n        }\n        return { data: currData, recordsUpdated: y };\n    }\n\n    private randomizeObjectData(dataObj: any) {\n        const changeP = 'Change(%)';\n        const res = this.generateNewPrice(dataObj.Price);\n        dataObj.Change = res.Price - dataObj.Price;\n        dataObj.Price = res.Price;\n        dataObj[changeP] = res.ChangePercent;\n    }\n\n    private generateNewPrice(oldPrice: number): any {\n        const rnd = parseFloat(Math.random().toFixed(2));\n        const volatility = 2;\n        let newPrice = 0;\n\n        let changePercent = 2 * volatility * rnd;\n        if (changePercent > volatility) {\n            changePercent -= (2 * volatility);\n        }\n\n        const changeAmount = oldPrice * (changePercent / 100);\n        newPrice = oldPrice + changeAmount;\n\n        const result = { Price: 0, ChangePercent: 0 };\n        result.Price = parseFloat(newPrice.toFixed(2));\n        result.ChangePercent = parseFloat(changePercent.toFixed(2));\n\n        return result;\n    }\n\n    private generateRandomNumber(min: number, max: number) {\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    private randomizeCountry(region: any) {\n        let country;\n        switch (region.Region) {\n            case 'North America': {\n                country = region.Countries[this.generateRandomNumber(0, 2)];\n                break;\n            }\n            case 'South America': {\n                country = region.Countries[this.generateRandomNumber(0, 11)];\n                break;\n            }\n            case 'Europe': {\n                country = region.Countries[this.generateRandomNumber(0, 26)];\n                break;\n            }\n            case 'Asia Pacific': {\n                country = region.Countries[this.generateRandomNumber(0, 15)];\n                break;\n            }\n            case 'Africa': {\n                country = region.Countries[this.generateRandomNumber(0, 11)];\n                break;\n            }\n            case 'Middle East': {\n                country = region.Countries[this.generateRandomNumber(0, 12)];\n                break;\n            }\n        }\n        return country;\n    }\n}","import React from 'react';\nimport { FinancialData } from './local-data/financial-data';\n\nexport const updateRandomPrices = (data: any[]): any => {\n    // console.time('randomizerandom');\n\n    const newData = data.map(item => ({...item}));\n\n    for (let i = Math.round(Math.random() * 10); i < newData.length; i += Math.round(Math.random() * 10)) {\n        randomizeObjectData(newData[i]);\n    }\n\n    // console.timeEnd('randomizerandom');\n\n    return newData;\n}\n\nexport const optimizedUpdateRandomPrices = (data: any[], callback?: any): any => {\n    // console.time('randomizerandom');\n;\n    const newData: any[] = [];\n\n    for (let i = Math.round(Math.random() * 10); i < data.length; i += Math.round(Math.random() * 10)) {\n        const newItem = {...data[i]};\n        randomizeObjectData(newItem);\n        newData.push(newItem);\n    }\n\n    // console.timeEnd('randomizerandom');\n\n    if (callback) {\n        callback(newData);\n    }\n\n    return data;\n}\n\nexport const updateAllPrices = (data: any[]): any => {\n    // console.time('randomizeall');\n\n    const newData = data.map(item => ({...item}));\n    for (const dataRow of newData) {\n        randomizeObjectData(dataRow);\n    }\n\n    // console.timeEnd('randomizeall');\n    return newData;\n}\n\n\nexport const randomizeObjectData = (dataObj) => {\n    const changeP = 'Change(%)';\n    const res = generateNewPrice(dataObj.Price);\n    dataObj.Change = res.Price - dataObj.Price;\n    dataObj.Price = res.Price;\n    dataObj[changeP] = res.ChangePercent;\n}\n\nexport const generateNewPrice = (oldPrice): any => {\n    let rnd = Math.random();\n    rnd = Math.round(rnd * 100) / 100;\n    const volatility = 2;\n    let newPrice = 0;\n    let changePercent = 2 * volatility * rnd;\n    if (changePercent > volatility) {\n        changePercent -= (2 * volatility);\n    }\n    const changeAmount = oldPrice * (changePercent / 100);\n    newPrice = oldPrice + changeAmount;\n    newPrice = Math.round(newPrice * 100) / 100;\n    const result = { Price: 0, ChangePercent: 0 };\n    changePercent = Math.round(changePercent * 100) / 100;\n    result.Price = newPrice;\n    result.ChangePercent = changePercent;\n\n    return result;\n}\n\nexport interface DataProviderRenderProps {\n    data?: any[];\n    onDataReset?: (volume: number) => void;\n    onStartLiveUpdate?: (frequency?: number) => void;\n    onStartOptimizedLiveUpdate?: (frequency?: number, callback?: any) => void;\n    onStartLiveUpdateAll?: (frequency?: number) => void;\n    onStopLiveUpdate?: () => void;\n}\n\nexport interface DataProviderProps {\n    children: React.ElementType<DataProviderRenderProps>\n}\n\nexport const DataProvider: any = (props: DataProviderProps) => {\n    const [data, setData] = React.useState<any[]>([]);\n    const intervalRef = React.useRef<any>(null);\n\n    const onDataReset = React.useCallback(\n        (volume: number = 10) => {\n            clearInterval(intervalRef.current);\n\n            const financialData: FinancialData = new FinancialData();\n            setData([...financialData.generateData(volume)]);\n        },\n        []\n    );\n\n    const onStartLiveUpdate = React.useCallback(\n        (interval) => {\n            clearInterval(intervalRef.current);\n\n            intervalRef.current = setInterval(\n                () => setData(oldData => updateRandomPrices(oldData)),\n                interval\n            );\n        },\n        [data]\n    );\n\n    const onStartOptimizedLiveUpdate = React.useCallback(\n        (interval, callback) => {\n            clearInterval(intervalRef.current);\n\n            intervalRef.current = setInterval(\n                () => setData(oldData => optimizedUpdateRandomPrices(oldData, callback)),\n                interval\n            );\n        },\n        [data]\n    );\n\n\n    const onStartLiveUpdateAll = React.useCallback(\n        (interval) => {\n            clearInterval(intervalRef.current);\n\n            intervalRef.current = setInterval(\n                () => setData(oldData => updateAllPrices(oldData)),\n                interval\n            );\n        },\n        [data]\n    );\n\n    const onStopLiveUpdate = React.useCallback(\n        () => {\n            clearInterval(intervalRef.current);\n        },\n        []\n    );\n\n    return React.Children.map(\n        props.children,\n        (child) => {\n            if (!React.isValidElement(child)) {\n                return;\n            }\n\n            return <child.type\n                {...child.props}\n                data={data}\n                onDataReset={onDataReset}\n                onStartLiveUpdate={onStartLiveUpdate}\n                onStartLiveUpdateAll={onStartLiveUpdateAll}\n                onStopLiveUpdate={onStopLiveUpdate}\n                onStartOptimizedLiveUpdate={onStartOptimizedLiveUpdate}\n            />;\n        }\n    );\n}\n","import React from 'react';\nimport './App.css';\nimport { AgGrid } from './AgGrid';\nimport { DataProvider } from './DataService';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <DataProvider>\n        <AgGrid />\n      </DataProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}